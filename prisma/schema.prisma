generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MasterUser {
  id                            Int                             @id @default(autoincrement())
  /// Timestamp when the user record was created
  created_at                    DateTime                        @default(now()) @map("created_at") @db.Timestamp(6)
  created_by                    Int?
  /// Timestamp when the user record was last updated
  updated_at                    DateTime                        @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  updated_by                    Int?
  deleted_at                    DateTime?                       @db.Timestamp(6)
  deleted_by                    Int?
  user_name                     String                          @unique(map: "IDX_6c2805cf6d98d187b26192a635") @db.VarChar(255)
  name                          String                          @unique(map: "IDX_8c6cb7b65491d9e7557cc0547e") @db.VarChar(255)
  mobile_no                     String?                         @db.VarChar(50)
  contact_no                    String?                         @db.VarChar(50)
  alternative_contact_no        String?                         @db.VarChar(50)
  address                       String?                         @db.Text
  nationality                   String?                         @db.VarChar(100)
  user_role_id                  Int?
  designation                   String?                         @db.VarChar(100)
  department                    String?                         @db.VarChar(100)
  identification_number         String?                         @db.VarChar(255)
  identification_type           String?                         @db.VarChar(255)
  bank_name                     String?                         @db.VarChar(255)
  branch_name                   String?                         @db.VarChar(255)
  salary_account_no             String?                         @db.VarChar(50)
  mfs_no                        String?                         @db.VarChar(50)
  calendar_language             master_users_calendar_language  @default(English_UK)
  language                      master_users_language           @default(Default)
  show_last_credit_card_digits  Int?                            @default(4)
  /// User's email address (optional, unique if present)
  email                         String                          @unique(map: "IDX_e54f163f206939ba0a65fd6920") @db.VarChar(255)
  password                      String                          @db.VarChar(255)
  cv_attachment_url             String?                         @db.Text
  profile_picture_url           String?                         @db.Text
  status                        master_users_status             @default(Active)
  master_user_accessible_hotels master_user_accessible_hotels[]
  master_user_activity_logs     master_user_activity_logs[]
  master_roles                  master_roles?                   @relation(fields: [user_role_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_ff4054659884d19bfad1e8264e3")
  user_permissions              user_permissions[]

  @@index([user_role_id], map: "FK_ff4054659884d19bfad1e8264e3")
  @@map("master_users")
}

model audit_logs {
  id                Int       @id @default(autoincrement())
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  created_by        Int?
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_by        Int?
  deleted_at        DateTime? @db.Timestamp(6)
  deleted_by        Int?
  reservation_id    Int
  sbu_id            Int
  prev_title        String?   @db.VarChar(255)
  prev_description  String?   @db.Text
  after_title       String    @db.VarChar(255)
  after_description String?   @db.Text
  ip_address        String?   @db.VarChar(45)
  operation_type    String?   @db.VarChar(100)
}

model email_template_categories {
  id                     Int                      @id @default(autoincrement())
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  created_by             Int?
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_by             Int?
  deleted_at             DateTime?                @db.Timestamp(6)
  deleted_by             Int?
  name                   String                   @unique(map: "IDX_b6bb1f1d004e6d3f3cb38e40ee") @db.VarChar(255)
  description            String?                  @db.Text
  sbu_id                 Int
  master_email_templates master_email_templates[]
}

model folios_rooms_mapping {
  id                  Int                 @id @default(autoincrement())
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?           @db.Timestamp(6)
  deleted_by          Int?
  folio_id            Int
  room_id             Int
  reservation_id      Int
  master_rooms        master_rooms        @relation(fields: [room_id], references: [id], onUpdate: Restrict, map: "FK_448f8695d8056f12dc0ce67a990")
  master_reservations master_reservations @relation(fields: [reservation_id], references: [id], onUpdate: Restrict, map: "FK_88cc521a82df3e26032f5fcc190")
  master_folios       master_folios       @relation(fields: [folio_id], references: [id], onUpdate: Restrict, map: "FK_b74e465b2d76f72f9de02bf683e")

  @@index([room_id], map: "FK_448f8695d8056f12dc0ce67a990")
  @@index([reservation_id], map: "FK_88cc521a82df3e26032f5fcc190")
  @@index([folio_id], map: "FK_b74e465b2d76f72f9de02bf683e")
}

model housekeeping_work_order {
  id                          Int                              @id @default(autoincrement())
  created_at                  DateTime                         @default(now()) @db.Timestamp(6)
  created_by                  Int?
  updated_at                  DateTime                         @default(now()) @db.Timestamp(6)
  updated_by                  Int?
  deleted_at                  DateTime?                        @db.Timestamp(6)
  deleted_by                  Int?
  room_id                     Int
  description                 String                           @db.Text
  category                    housekeeping_work_order_category
  priority                    housekeeping_work_order_priority
  status                      housekeeping_work_order_status   @default(new)
  assign_to                   Int
  start_date                  DateTime                         @db.Date
  end_date                    DateTime                         @db.Date
  remark                      String?                          @db.Text
  housekeeping_work_order_log housekeeping_work_order_log[]
}

model housekeeping_work_order_log {
  id                      Int                                @id @default(autoincrement())
  created_at              DateTime                           @default(now()) @db.Timestamp(6)
  created_by              Int?
  updated_at              DateTime                           @default(now()) @db.Timestamp(6)
  updated_by              Int?
  deleted_at              DateTime?                          @db.Timestamp(6)
  deleted_by              Int?
  work_order_id           Int
  status                  housekeeping_work_order_log_status
  assign_to               Int?
  remark                  String?                            @db.Text
  housekeeping_work_order housekeeping_work_order            @relation(fields: [work_order_id], references: [id], onUpdate: Restrict, map: "FK_ed9772b6754995ee67b9f3adf3d")

  @@index([work_order_id], map: "FK_ed9772b6754995ee67b9f3adf3d")
}

model master_buildings {
  id            Int                     @id @default(autoincrement())
  created_at    DateTime                @default(now()) @db.Timestamp(6)
  created_by    Int?
  updated_at    DateTime                @default(now()) @db.Timestamp(6)
  updated_by    Int?
  deleted_at    DateTime?               @db.Timestamp(6)
  deleted_by    Int?
  sbu_id        Int
  name          String                  @db.VarChar(255)
  description   String?                 @db.Text
  status        master_buildings_status @default(Active)
  master_sbu    master_sbu              @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_7c037dfae57a2d6acccdd7855fe")
  master_floors master_floors[]
  master_rooms  master_rooms[]

  @@index([sbu_id], map: "FK_7c037dfae57a2d6acccdd7855fe")
}

model master_business_agents {
  id                  Int                           @id @default(autoincrement())
  created_at          DateTime                      @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime                      @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?                     @db.Timestamp(6)
  deleted_by          Int?
  sbu_id              Int
  name                String                        @db.VarChar(255)
  short_code          String?                       @db.VarChar(50)
  color               String?                       @db.VarChar(20)
  commission          String?                       @db.Text
  bin_number          String?                       @db.VarChar(50)
  address             String?                       @db.Text
  status              master_business_agents_status @default(Active)
  master_sbu          master_sbu                    @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_28c2cf307f1268cd6e06389c3ff")
  master_reservations master_reservations[]

  @@unique([name, short_code, sbu_id, status], map: "composite_idx_name_short_code")
  @@index([sbu_id], map: "FK_28c2cf307f1268cd6e06389c3ff")
}

model master_business_sources {
  id                  Int                            @id @default(autoincrement())
  sbu_id              Int
  name                String                         @db.VarChar(255)
  address             String?                        @db.Text
  status              master_business_sources_status @default(Active)
  created_at          DateTime                       @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime                       @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?                      @db.Timestamp(6)
  deleted_by          Int?
  short_code          String?                        @db.VarChar(50)
  market_code         String?                        @db.VarChar(50)
  registration_no     String?                        @db.VarChar(50)
  color_code          String?                        @db.VarChar(10)
  master_sbu          master_sbu                     @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_e92ca5cf2d865ed0e8b8a60961e")
  master_reservations master_reservations[]

  @@index([sbu_id], map: "FK_e92ca5cf2d865ed0e8b8a60961e")
}

model master_charges {
  id              Int                          @id @default(autoincrement())
  created_at      DateTime                     @default(now()) @db.Timestamp(6)
  created_by      Int?
  updated_at      DateTime                     @default(now()) @db.Timestamp(6)
  updated_by      Int?
  deleted_at      DateTime?                    @db.Timestamp(6)
  deleted_by      Int?
  ref_no          Int?
  sbu_id          Int
  amount          Decimal                      @db.Decimal(12, 2)
  description     String                       @db.VarChar(255)
  type            master_charges_type
  posting_type    master_charges_posting_type?
  charge_rule     master_charges_charge_rule?
  is_tax_included Int                          @default(0) @db.TinyInt
  sub_type        master_charges_sub_type?
  folio_id        Int?
  charge_date     DateTime                     @db.Date
  master_folios   master_folios?               @relation(fields: [folio_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_6711291e50c902f43b73e24ba12")
  master_sbu      master_sbu                   @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_8adbe07a8833b02d645d52d0886")

  @@index([folio_id], map: "FK_6711291e50c902f43b73e24ba12")
  @@index([sbu_id], map: "FK_8adbe07a8833b02d645d52d0886")
}

model master_companies {
  id                      Int                       @id @default(autoincrement())
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  created_by              Int?
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  updated_by              Int?
  deleted_at              DateTime?                 @db.Timestamp(6)
  deleted_by              Int?
  register_name           String                    @db.VarChar(255)
  company_known_as        String?                   @db.VarChar(255)
  company_address         String?                   @db.Text
  company_phone_number    String?                   @db.VarChar(50)
  fax                     String?                   @db.VarChar(50)
  email                   String?                   @db.VarChar(255)
  website                 String?                   @db.VarChar(255)
  company_code            String?                   @unique(map: "IDX_fe7f4d8030943d2b4ef9ca0d99") @db.VarChar(100)
  contact_person          String?                   @db.Text
  credit_validity         Int?
  current_outstanding     Decimal?                  @db.Decimal(10, 2)
  over_limit_action       String?                   @db.VarChar(100)
  last_payment_date       DateTime?                 @db.Date
  is_ledger_applied       Int?                      @db.TinyInt
  credit_limit            Decimal?                  @db.Decimal(10, 2)
  payment_term            String?                   @db.VarChar(100)
  authorization_required  Int?                      @db.TinyInt
  approver_name           String?                   @db.VarChar(255)
  is_offer_applied        Int?                      @db.TinyInt
  services                String?                   @db.Text
  discount_percentage     Decimal?                  @db.Decimal(5, 2)
  sbu_id                  Int
  status                  master_companies_status   @default(Active)
  reservation_source_info reservation_source_info[]
}

model master_credit_cards {
  id                  Int                           @id @default(autoincrement())
  created_at          DateTime                      @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime                      @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?                     @db.Timestamp(6)
  deleted_by          Int?
  reservation_id      Int?
  card_number         String                        @db.VarChar(20)
  card_holder_name    String                        @db.VarChar(100)
  expiry_month        Int
  expiry_year         Int
  cvv                 Int
  card_type           master_credit_cards_card_type
  sbu_id              Int
  master_reservations master_reservations?          @relation(fields: [reservation_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_740e3064a55a6136d46a9b8c011")
  master_payments     master_payments[]

  @@index([reservation_id], map: "FK_740e3064a55a6136d46a9b8c011")
}

model master_currencies {
  id                   Int                      @id @default(autoincrement())
  sbu_id               Int
  status               master_currencies_status @default(Active)
  created_at           DateTime                 @default(now()) @db.Timestamp(6)
  created_by           Int?
  updated_at           DateTime                 @default(now()) @db.Timestamp(6)
  updated_by           Int?
  deleted_at           DateTime?                @db.Timestamp(6)
  deleted_by           Int?
  currency_code        String                   @db.VarChar(10)
  sign                 String?                  @db.VarChar(10)
  is_sign_prefix       Int                      @default(1) @db.TinyInt
  digits_after_decimal Int                      @default(2)
  base_exchange_rate   Decimal                  @db.Decimal(10, 4)
  dollar_exchange_rate Decimal                  @db.Decimal(10, 4)
  country              String                   @db.VarChar(255)
  currency             String                   @db.VarChar(10)
  master_sbu           master_sbu               @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_2989251932dd4afe0be26ad9cdc")
  master_payments      master_payments[]
  master_pos_points    master_pos_points[]

  @@unique([currency_code, sbu_id, status], map: "composite_idx_currencyCode")
  @@index([sbu_id], map: "FK_2989251932dd4afe0be26ad9cdc")
}

model master_currency_exchange_rates {
  id                   Int       @id @default(autoincrement())
  created_at           DateTime  @default(now()) @db.Timestamp(6)
  created_by           Int?
  updated_at           DateTime  @default(now()) @db.Timestamp(6)
  updated_by           Int?
  deleted_at           DateTime? @db.Timestamp(6)
  deleted_by           Int?
  sbu_id               Int
  country              String    @db.VarChar(255)
  currency_code        String    @db.VarChar(255)
  digits_after_decimal String    @db.VarChar(255)
  base_exchange_rate   Float     @db.Float
  dollar_exchange_rate Float     @db.Float
  name                 String    @db.VarChar(255)
}

model master_departments {
  id          Int                       @id @default(autoincrement())
  sbu_id      Int
  name        String                    @db.VarChar(255)
  description String?                   @db.Text
  menu_access String?                   @db.LongText
  status      master_departments_status @default(Active)
  created_at  DateTime                  @default(now()) @db.Timestamp(6)
  created_by  Int?
  updated_at  DateTime                  @default(now()) @db.Timestamp(6)
  updated_by  Int?
  deleted_at  DateTime?                 @db.Timestamp(6)
  deleted_by  Int?
  master_sbu  master_sbu                @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_2faf63fe445cfc8f0240e34ee73")

  @@index([sbu_id], map: "FK_2faf63fe445cfc8f0240e34ee73")
}

model master_discounts {
  id         Int                     @id @default(autoincrement())
  sbu_id     Int
  name       String                  @db.VarChar(255)
  code       String?                 @db.VarChar(50)
  type       master_discounts_type?
  value      Decimal?                @db.Decimal(10, 2)
  start_date DateTime?               @db.Date
  end_date   DateTime?               @db.Date
  applies_to String?                 @db.LongText
  is_active  Int                     @default(1) @db.TinyInt
  status     master_discounts_status @default(Active)
  created_at DateTime                @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime                @default(now()) @db.Timestamp(6)
  updated_by Int?
  deleted_at DateTime?               @db.Timestamp(6)
  deleted_by Int?
  master_sbu master_sbu              @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_1407a93544d9f627e3533386a30")

  @@index([sbu_id], map: "FK_1407a93544d9f627e3533386a30")
}

model master_display_settings {
  id                                         Int                                                @id @default(autoincrement())
  sbu_id                                     Int                                                @unique(map: "IDX_be4f6c38295ce80f6abe34e7d4")
  theme_color_primary                        String?                                            @db.VarChar(7)
  theme_color_secondary                      String?                                            @db.VarChar(7)
  font_family                                String?                                            @db.VarChar(100)
  currency_display_format                    String?                                            @db.VarChar(50)
  language_code                              String                                             @default("en") @db.VarChar(10)
  show_invoice_terms                         Int                                                @default(1) @db.TinyInt
  weekend_days                               String?                                            @db.LongText
  status                                     master_display_settings_status                     @default(Active)
  created_at                                 DateTime                                           @default(now()) @db.Timestamp(6)
  created_by                                 Int?
  updated_at                                 DateTime                                           @default(now()) @db.Timestamp(6)
  updated_by                                 Int?
  deleted_at                                 DateTime?                                          @db.Timestamp(6)
  deleted_by                                 Int?
  arr_dept_date_format                       master_display_settings_arr_dept_date_format       @default(DD_MM_YYYY)
  round_off_type                             master_display_settings_round_off_type             @default(notZero)
  round_off_limit                            Int?
  add_up_round_off_to_rates                  Int                                                @default(0) @db.TinyInt
  salutation                                 master_display_settings_salutation                 @default(Mr_)
  identity_type                              master_display_settings_identity_type              @default(NID)
  default_reservation_type                   master_display_settings_default_reservation_type   @default(Confirm_Booking)
  bill_to                                    master_display_settings_bill_to?
  state_caption                              String?                                            @db.VarChar(100)
  zip_code_caption                           String?                                            @db.VarChar(100)
  is_tax_inclusive_rates                     Int                                                @default(0) @db.TinyInt
  web_rate_mode                              master_display_settings_web_rate_mode              @default(Regular)
  web_room_inventory_mode                    master_display_settings_web_room_inventory_mode    @default(Regular)
  group_payment_posting_mode                 master_display_settings_group_payment_posting_mode @default(Group_Owner)
  registration_no_mandatory_for_travel_agent Int                                                @default(0) @db.TinyInt
  payment_mode                               master_display_settings_payment_mode?
  payment_gateway                            master_display_settings_payment_gateway?
  timezone                                   String?                                            @db.VarChar(100)
  country                                    String?                                            @db.VarChar(100)
  nationality                                String?                                            @db.VarChar(100)
  date_format                                master_display_settings_date_format                @default(DD_MM_YYYY)
  time_format                                master_display_settings_time_format                @default(HH_mm)
  generate_invoice_on_checkout               Int?                                               @default(0) @db.TinyInt
  generate_invoice_on_cancel                 Int?                                               @default(0) @db.TinyInt
  generate_invoice_on_no_show                Int?                                               @default(0) @db.TinyInt
  generate_single_invoice_for_groups         Int?                                               @default(0) @db.TinyInt
  no_charge_void_charge_folio                Int?                                               @default(0) @db.TinyInt
  master_sbu                                 master_sbu                                         @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_be4f6c38295ce80f6abe34e7d42")
}

model master_email_templates {
  id                                 Int                                       @id @default(autoincrement())
  sbu_id                             Int
  name                               String?                                   @db.VarChar(255)
  subject                            String?                                   @db.VarChar(512)
  body                               String?                                   @db.Text
  cc                                 String?                                   @db.VarChar(512)
  bcc                                String?                                   @db.VarChar(512)
  status                             master_email_templates_status             @default(Active)
  created_at                         DateTime                                  @default(now()) @db.Timestamp(6)
  created_by                         Int?
  updated_at                         DateTime                                  @default(now()) @db.Timestamp(6)
  updated_by                         Int?
  deleted_at                         DateTime?                                 @db.Timestamp(6)
  deleted_by                         Int?
  template_used_for                  master_email_templates_template_used_for?
  category_id                        Int?
  email_template_categories          email_template_categories?                @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_0e43717f7833c6c6499a0b4ce09")
  master_sbu                         master_sbu                                @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_7f925743a6e701656026f20ed9f")
  master_reservation_billing_details master_reservation_billing_details[]
  template_placeholder_mappings      template_placeholder_mappings[]

  @@index([category_id], map: "FK_0e43717f7833c6c6499a0b4ce09")
  @@index([sbu_id], map: "FK_7f925743a6e701656026f20ed9f")
}

model master_extra_charges {
  id                         Int                                             @id @default(autoincrement())
  created_at                 DateTime                                        @default(now()) @db.Timestamp(6)
  created_by                 Int?
  updated_at                 DateTime                                        @default(now()) @db.Timestamp(6)
  updated_by                 Int?
  deleted_at                 DateTime?                                       @db.Timestamp(6)
  deleted_by                 Int?
  sbu_id                     Int
  short_code                 String                                          @db.VarChar(50)
  name                       String                                          @db.VarChar(255)
  rate                       master_extra_charges_rate
  front_desk_sort_key        Int?
  is_fixed_price             Int                                             @default(0) @db.TinyInt
  rate_value                 Float?                                          @db.Float
  apply_on_offered_room_rent master_extra_charges_apply_on_offered_room_rent
  taxes                      String?                                         @db.Text
  rate_inclusive_tax         Int?
  publish_on_web             Int                                             @default(0) @db.TinyInt
  always_charge              Int                                             @default(0) @db.TinyInt
  voucher_no_type            master_extra_charges_voucher_no_type
  voucher_prefix             String?                                         @db.VarChar(50)
  voucher_start_from         Int?
  web_applies_on             String?                                         @db.VarChar(255)
  web_posting_rule           master_extra_charges_web_posting_rule?
  web_description            String?                                         @db.Text
  web_res_sort_key           Int?
  web_valid_from             DateTime?                                       @db.Date
  web_valid_to               DateTime?                                       @db.Date
  status                     master_extra_charges_status                     @default(Active)
}

model master_floors {
  id               Int                  @id @default(autoincrement())
  sbu_id           Int
  building_id      Int
  name             String               @db.VarChar(100)
  number           Int
  sort_order       Int?
  status           master_floors_status @default(Active)
  created_at       DateTime             @default(now()) @db.Timestamp(6)
  created_by       Int?
  updated_at       DateTime             @default(now()) @db.Timestamp(6)
  updated_by       Int?
  deleted_at       DateTime?            @db.Timestamp(6)
  deleted_by       Int?
  master_buildings master_buildings     @relation(fields: [building_id], references: [id], onUpdate: Restrict, map: "FK_953e441251b3bc130db0f18a75c")
  master_sbu       master_sbu           @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_e48ee6c9f6f17ae427ba717226f")
  master_rooms     master_rooms[]

  @@index([building_id], map: "FK_953e441251b3bc130db0f18a75c")
  @@index([sbu_id], map: "FK_e48ee6c9f6f17ae427ba717226f")
}

model master_folio_discounts {
  id              Int           @id @default(autoincrement())
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  created_by      Int?
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_by      Int?
  deleted_at      DateTime?     @db.Timestamp(6)
  deleted_by      Int?
  discount_id     Int
  discount_amount Decimal       @db.Decimal(10, 2)
  folio_id        Int
  description     String?       @db.Text
  master_folios   master_folios @relation(fields: [folio_id], references: [id], onUpdate: Restrict, map: "FK_290d81a1ab3dd22f2045c49a2bf")

  @@index([folio_id], map: "FK_290d81a1ab3dd22f2045c49a2bf")
}

model master_folios {
  id                     Int                      @id @default(autoincrement())
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  created_by             Int?
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_by             Int?
  deleted_at             DateTime?                @db.Timestamp(6)
  deleted_by             Int?
  folio_no               String                   @unique(map: "IDX_e5da0f48cd45d070a17aca26ac") @db.VarChar(50)
  guest_id               Int
  sbu_id                 Int
  folio_type             master_folios_folio_type @default(Guest)
  reservation_id         Int
  status                 master_folios_status     @default(Open)
  folios_rooms_mapping   folios_rooms_mapping[]
  master_charges         master_charges[]
  master_folio_discounts master_folio_discounts[]
  master_guests          master_guests            @relation(fields: [guest_id], references: [id], onUpdate: Restrict, map: "FK_546b1077b2af5ddab1a2f0b0e22")
  master_sbu             master_sbu               @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_6ae11829fc0d74668897cc4f608")
  master_reservations    master_reservations      @relation(fields: [reservation_id], references: [id], onUpdate: Restrict, map: "FK_b9f76c8bab66a9021465af82191")
  master_payments        master_payments[]

  @@index([guest_id], map: "FK_546b1077b2af5ddab1a2f0b0e22")
  @@index([sbu_id], map: "FK_6ae11829fc0d74668897cc4f608")
  @@index([reservation_id], map: "FK_b9f76c8bab66a9021465af82191")
}

model master_guests {
  id                                 Int                                  @id @default(autoincrement())
  created_at                         DateTime                             @default(now()) @db.Timestamp(6)
  created_by                         Int?
  updated_at                         DateTime                             @default(now()) @db.Timestamp(6)
  updated_by                         Int?
  deleted_at                         DateTime?                            @db.Timestamp(6)
  deleted_by                         Int?
  guest_image_url                    String?                              @db.VarChar(255)
  salutation                         String?                              @db.VarChar(50)
  name                               String                               @db.VarChar(255)
  contact_no                         String?                              @db.VarChar(50)
  email                              String?                              @db.VarChar(255)
  id_type                            master_guests_id_type?
  id_image_url                       String?                              @db.VarChar(255)
  id_number                          String?                              @db.VarChar(100)
  date_of_birth                      DateTime?                            @db.Date
  address                            String?                              @db.Text
  country                            String?                              @db.VarChar(100)
  city                               String?                              @db.VarChar(100)
  postal_code                        String?                              @db.VarChar(20)
  personal_preferences               String?                              @db.Text
  is_member                          Int                                  @default(0) @db.TinyInt
  total_points_earned                Decimal                              @default(0.00) @db.Decimal(10, 2)
  redeemed_points                    Decimal                              @default(0.00) @db.Decimal(10, 2)
  remaining_points                   Decimal                              @default(0.00) @db.Decimal(10, 2)
  sbu_id                             Int?
  company_name                       String?                              @db.VarChar(255)
  title                              String?                              @db.VarChar(20)
  phone                              String?                              @db.VarChar(50)
  occupation                         String?                              @db.VarChar(255)
  vip_status                         master_guests_vip_status?
  nationality                        String?                              @db.VarChar(100)
  id_expiry_date                     DateTime?                            @db.Date
  id_issuing_country                 String?                              @db.VarChar(100)
  id_issuing_city                    String?                              @db.VarChar(100)
  guest_type                         master_guests_guest_type?
  birth_country                      String?                              @db.VarChar(100)
  birth_city                         String?                              @db.VarChar(100)
  purpose_of_visit                   master_guests_purpose_of_visit?
  state                              String?                              @db.VarChar(100)
  designation                        String?                              @db.VarChar(255)
  work_address                       String?                              @db.Text
  work_country                       String?                              @db.VarChar(100)
  work_state                         String?                              @db.VarChar(100)
  work_city                          String?                              @db.VarChar(100)
  work_postal_code                   String?                              @db.VarChar(20)
  work_phone1                        String?                              @db.VarChar(50)
  work_phone2                        String?                              @db.VarChar(50)
  work_fax                           String?                              @db.VarChar(50)
  work_email                         String?                              @db.VarChar(255)
  work_website                       String?                              @db.VarChar(255)
  vehicle_registration_no            String?                              @db.VarChar(100)
  license_number                     String?                              @db.VarChar(100)
  license_country                    String?                              @db.VarChar(100)
  license_state                      String?                              @db.VarChar(100)
  spouse_name                        String?                              @db.VarChar(255)
  spouse_dob                         DateTime?                            @db.Date
  marriage_anniversary               DateTime?                            @db.Date
  marital_status                     master_guests_marital_status?
  gender                             master_guests_gender                 @default(Male)
  master_folios                      master_folios[]
  master_sbu                         master_sbu?                          @relation(fields: [sbu_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_418303172a3713a61994b335109")
  master_reservation_billing_details master_reservation_billing_details[]
  master_reservation_guests          master_reservation_guests[]

  @@index([sbu_id], map: "FK_418303172a3713a61994b335109")
  @@fulltext([name, email, contact_no], map: "IDX_GUEST_ALL_FULLTEXT")
  @@fulltext([contact_no], map: "IDX_GUEST_CONTACT_FULLTEXT")
  @@fulltext([email], map: "IDX_GUEST_EMAIL_FULLTEXT")
  @@fulltext([name], map: "IDX_GUEST_NAME_FULLTEXT")
}

model master_hotel_settings {
  id                  Int                          @id @default(autoincrement())
  sbu_id              Int                          @unique(map: "IDX_3d7b08e573b0480397db9dd660")
  check_in_time       DateTime                     @default(dbgenerated("('14:00:00')")) @db.Time(0)
  check_out_time      DateTime                     @default(dbgenerated("('12:00:00')")) @db.Time(0)
  cancellation_policy String?                      @db.Text
  smoking_allowed     Int                          @default(0) @db.TinyInt
  pet_policy          String?                      @db.Text
  status              master_hotel_settings_status @default(Active)
  created_at          DateTime                     @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime                     @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?                    @db.Timestamp(6)
  deleted_by          Int?
  master_sbu          master_sbu                   @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_3d7b08e573b0480397db9dd6607")
}

model master_joint_room_mapping_rooms {
  id                 Int                @id @default(autoincrement())
  created_at         DateTime           @default(now()) @db.Timestamp(6)
  created_by         Int?
  updated_at         DateTime           @default(now()) @db.Timestamp(6)
  updated_by         Int?
  deleted_at         DateTime?          @db.Timestamp(6)
  deleted_by         Int?
  joint_room_id      Int
  room_id            Int
  master_rooms       master_rooms       @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "FK_58fd7ea3c29580284dc2e0f1458")
  master_joint_rooms master_joint_rooms @relation(fields: [joint_room_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "FK_c8a2e1fa3d27f55be10f338032f")

  @@unique([joint_room_id, room_id], map: "IDX_9308426ffc9c1814e79553dc1f")
  @@index([room_id], map: "FK_58fd7ea3c29580284dc2e0f1458")
}

model master_joint_rooms {
  id                              Int                               @id @default(autoincrement())
  created_at                      DateTime                          @default(now()) @db.Timestamp(6)
  created_by                      Int?
  updated_at                      DateTime                          @default(now()) @db.Timestamp(6)
  updated_by                      Int?
  deleted_at                      DateTime?                         @db.Timestamp(6)
  deleted_by                      Int?
  joint_room_name                 String                            @unique(map: "IDX_3542b69981c8133790921954c3") @db.VarChar(255)
  number_of_rooms                 Int
  status                          master_joint_rooms_status         @default(Active)
  master_joint_room_mapping_rooms master_joint_room_mapping_rooms[]
}

model master_market_code {
  id               Int       @id @default(autoincrement())
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  created_by       Int?
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_by       Int?
  deleted_at       DateTime? @db.Timestamp(6)
  deleted_by       Int?
  market_code_name String    @db.VarChar(255)
  sbu_id           Int
}

model master_measurement_units {
  id           Int                             @id @default(autoincrement())
  sbu_id       Int
  name         String                          @db.VarChar(100)
  abbreviation String?                         @db.VarChar(10)
  is_active    Int                             @default(1) @db.TinyInt
  status       master_measurement_units_status @default(Active)
  created_at   DateTime                        @default(now()) @db.Timestamp(6)
  created_by   Int?
  updated_at   DateTime                        @default(now()) @db.Timestamp(6)
  updated_by   Int?
  deleted_at   DateTime?                       @db.Timestamp(6)
  deleted_by   Int?
  master_sbu   master_sbu                      @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_1258dc1269cb5a0e34e2c08f572")

  @@index([sbu_id], map: "FK_1258dc1269cb5a0e34e2c08f572")
}

model master_payment_modes {
  id                                 Int                                  @id @default(autoincrement())
  name                               String                               @db.VarChar(255)
  status                             master_payment_modes_status          @default(Active)
  created_at                         DateTime                             @default(now()) @db.Timestamp(6)
  created_by                         Int?
  updated_at                         DateTime                             @default(now()) @db.Timestamp(6)
  updated_by                         Int?
  deleted_at                         DateTime?                            @db.Timestamp(6)
  deleted_by                         Int?
  type                               master_payment_modes_type
  details                            String?                              @db.LongText
  master_payments                    master_payments[]
  master_reservation_billing_details master_reservation_billing_details[]
  master_reservations                master_reservations[]
}

model master_payments {
  id                   Int                            @id @default(autoincrement())
  created_at           DateTime                       @default(now()) @db.Timestamp(6)
  created_by           Int?
  updated_at           DateTime                       @default(now()) @db.Timestamp(6)
  updated_by           Int?
  deleted_at           DateTime?                      @db.Timestamp(6)
  deleted_by           Int?
  ref_no               Int?
  transaction_id       String                         @unique(map: "IDX_a4a33e25e466ca3e6ebf75c150") @db.VarChar(36)
  sbu_id               Int
  currency_id          Int?
  credit_card_id       Int?
  payment_mode_id      Int
  paid_amount          Decimal                        @db.Decimal(12, 2)
  paid_date            DateTime?                      @db.Date
  payment_status       master_payments_payment_status @default(paid)
  description          String                         @db.VarChar(255)
  folio_id             Int?
  master_payment_modes master_payment_modes           @relation(fields: [payment_mode_id], references: [id], onUpdate: Restrict, map: "FK_0aa01e20eca82efdd41c814f5ba")
  master_currencies    master_currencies?             @relation(fields: [currency_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_4d0640f48c4fcd612132743f6bc")
  master_sbu           master_sbu                     @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_54422931dae1b1690b97c6eca81")
  master_credit_cards  master_credit_cards?           @relation(fields: [credit_card_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_84aff9385ee0d6305caaae03e09")
  master_folios        master_folios?                 @relation(fields: [folio_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_ced9c5b197dbef3a56bf9ea5ecc")

  @@index([payment_mode_id], map: "FK_0aa01e20eca82efdd41c814f5ba")
  @@index([currency_id], map: "FK_4d0640f48c4fcd612132743f6bc")
  @@index([sbu_id], map: "FK_54422931dae1b1690b97c6eca81")
  @@index([credit_card_id], map: "FK_84aff9385ee0d6305caaae03e09")
  @@index([folio_id], map: "FK_ced9c5b197dbef3a56bf9ea5ecc")
}

model master_permission_actions {
  id         Int                              @id @default(autoincrement())
  created_at DateTime                         @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime                         @default(now()) @db.Timestamp(6)
  updated_by Int?
  deleted_at DateTime?                        @db.Timestamp(6)
  deleted_by Int?
  name       String                           @unique(map: "IDX_ba147bc1a634319309de282260") @db.VarChar(100)
  status     master_permission_actions_status @default(Active)
}

model master_permission_modules {
  id               Int                              @id @default(autoincrement())
  created_at       DateTime                         @default(now()) @db.Timestamp(6)
  created_by       Int?
  updated_at       DateTime                         @default(now()) @db.Timestamp(6)
  updated_by       Int?
  deleted_at       DateTime?                        @db.Timestamp(6)
  deleted_by       Int?
  name             String                           @db.VarChar(255)
  parent_id        Int?
  sbu_id           Int
  menu_url         String?                          @db.VarChar(255)
  description      String?                          @db.Text
  status           master_permission_modules_status @default(active)
  user_permissions user_permissions[]
}

model master_pos_points {
  id                     Int                      @id @default(autoincrement())
  sbu_id                 Int
  name                   String                   @db.VarChar(255)
  currency_id            Int?
  vat_enabled            Int                      @default(1) @db.TinyInt
  service_charge_enabled Int                      @default(1) @db.TinyInt
  logo_url               String?                  @db.VarChar(512)
  email                  String?                  @db.VarChar(255)
  status                 master_pos_points_status @default(Active)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  created_by             Int?
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_by             Int?
  deleted_at             DateTime?                @db.Timestamp(6)
  deleted_by             Int?
  master_currencies      master_currencies?       @relation(fields: [currency_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_663f0f65ccad22c1e907f073b2f")
  master_sbu             master_sbu               @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_fd27b50b4d6d2bac8fb9f2516bd")

  @@index([currency_id], map: "FK_663f0f65ccad22c1e907f073b2f")
  @@index([sbu_id], map: "FK_fd27b50b4d6d2bac8fb9f2516bd")
}

model master_rate_types {
  id                     Int                      @id @default(autoincrement())
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  created_by             Int?
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_by             Int?
  deleted_at             DateTime?                @db.Timestamp(6)
  deleted_by             Int?
  sbu_id                 Int
  name                   String?                  @db.VarChar(255)
  short_code             String?                  @db.VarChar(50)
  is_tax_included        Int                      @default(0) @db.TinyInt
  status                 master_rate_types_status @default(Active)
  master_sbu             master_sbu               @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_9d655047c8946b5651ff50c669c")
  master_room_rates      master_room_rates[]
  master_room_type_rates master_room_type_rates[]
  reservation_rooms      reservation_rooms[]

  @@index([sbu_id], map: "FK_9d655047c8946b5651ff50c669c")
}

model master_reports {
  id         Int        @id @default(autoincrement())
  created_at DateTime   @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  updated_by Int?
  deleted_at DateTime?  @db.Timestamp(6)
  deleted_by Int?
  name       String     @unique(map: "IDX_6b3cfa78263cbbf2a340af392c") @db.VarChar(255)
  sbu_id     Int
  master_sbu master_sbu @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_464a19593fe9342214326ca7e44")

  @@index([sbu_id], map: "FK_464a19593fe9342214326ca7e44")
}

model master_reservation_billing_details {
  id                                    Int                                                 @id @default(autoincrement())
  created_at                            DateTime                                            @default(now()) @db.Timestamp(6)
  created_by                            Int?
  updated_at                            DateTime                                            @default(now()) @db.Timestamp(6)
  updated_by                            Int?
  deleted_at                            DateTime?                                           @db.Timestamp(6)
  deleted_by                            Int?
  reservation_id                        Int
  billing_type                          master_reservation_billing_details_billing_type     @default(Cash_Bank)
  payment_mode_id                       Int
  registration_no                       String?                                             @db.VarChar(100)
  reservation_type                      master_reservation_billing_details_reservation_type @default(Hold_Confirm_Booking)
  rate_plan_package_id                  Int?
  guest_id                              Int?
  rate_plan_package_details             String?                                             @db.Text
  send_checkout_email                   Int                                                 @default(0) @db.TinyInt
  checkout_email_template_id            Int?
  suppress_rate_on_gr_card              Int                                                 @default(0) @db.TinyInt
  display_inclusion_separately_on_folio Int                                                 @default(0) @db.TinyInt
  apply_to_group                        Int                                                 @default(0) @db.TinyInt
  market_code_id                        Int?
  business_source_id                    Int?
  travel_agent_id                       Int?
  voucher_no                            String?                                             @db.VarChar(20)
  commission_plan                       master_reservation_billing_details_commission_plan? @default(Confirm_Booking)
  plan_value                            Decimal?                                            @db.Decimal(10, 2)
  company_id                            Int?
  sales_person_id                       Int?
  master_reservations                   master_reservations                                 @relation(fields: [reservation_id], references: [id], onUpdate: Restrict, map: "FK_b2458caca02e023421658504452")
  master_guests                         master_guests?                                      @relation(fields: [guest_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_b5df971fccc8b065505074b5e89")
  master_email_templates                master_email_templates?                             @relation(fields: [checkout_email_template_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_d8fdc883b4da049dbbd80bacde7")
  master_payment_modes                  master_payment_modes                                @relation(fields: [payment_mode_id], references: [id], onUpdate: Restrict, map: "FK_f6d25f8cb9c98e5d88886e5b80a")

  @@index([reservation_id], map: "FK_b2458caca02e023421658504452")
  @@index([guest_id], map: "FK_b5df971fccc8b065505074b5e89")
  @@index([checkout_email_template_id], map: "FK_d8fdc883b4da049dbbd80bacde7")
  @@index([payment_mode_id], map: "FK_f6d25f8cb9c98e5d88886e5b80a")
}

model master_reservation_guests {
  id                  Int                 @id @default(autoincrement())
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?           @db.Timestamp(6)
  deleted_by          Int?
  reservation_id      Int
  guest_id            Int
  room_id             Int
  is_master_guest     Int                 @default(1) @db.TinyInt
  master_reservations master_reservations @relation(fields: [reservation_id], references: [id], onUpdate: Restrict, map: "FK_4afa44441fabd5ad27ad4666076")
  master_guests       master_guests       @relation(fields: [guest_id], references: [id], onUpdate: Restrict, map: "FK_ff51e3bae0e77197f68b1c41fad")

  @@index([reservation_id], map: "FK_4afa44441fabd5ad27ad4666076")
  @@index([guest_id], map: "FK_ff51e3bae0e77197f68b1c41fad")
}

model master_reservations {
  id                                    Int                                  @id @default(autoincrement())
  created_at                            DateTime                             @default(now()) @db.Timestamp(6)
  created_by                            Int?
  updated_at                            DateTime                             @default(now()) @db.Timestamp(6)
  updated_by                            Int?
  deleted_at                            DateTime?                            @db.Timestamp(6)
  deleted_by                            Int?
  reservation_number                    String                               @unique(map: "IDX_47f76ea74110ff65798d3be3d5") @db.VarChar(100)
  sbu_id                                Int
  business_agent_id                     Int?
  total_adults                          Int                                  @default(0)
  total_children                        Int                                  @default(0)
  payment_currency_choice               String?                              @db.VarChar(50)
  total_calculated_rate                 Decimal                              @default(0.00) @db.Decimal(12, 2)
  exchange_rate_show                    Decimal?                             @db.Decimal(10, 4)
  extra_bed_required                    Int                                  @default(0) @db.TinyInt
  split_reservation_flag                Int                                  @default(0) @db.TinyInt
  pickup_drop_required                  Int                                  @default(0) @db.TinyInt
  pickup_drop_time                      DateTime?                            @db.DateTime(0)
  send_email_at_checkout                Int                                  @default(0) @db.TinyInt
  email_booking_vouchers                String?                              @db.Text
  display_inclusion_separately_on_folio Int                                  @default(0) @db.TinyInt
  advance_paid_amount                   Decimal                              @default(0.00) @db.Decimal(12, 2)
  check_in_datetime                     DateTime                             @db.DateTime(0)
  check_out_datetime                    DateTime                             @db.DateTime(0)
  reservation_date                      DateTime?                            @db.DateTime(0)
  booking_source                        String?                              @db.VarChar(50)
  channel_name                          String?                              @db.VarChar(100)
  reservation_source_reference          String?                              @db.VarChar(100)
  booking_purpose                       String?                              @db.VarChar(100)
  special_requests                      String?                              @db.Text
  cancelled_by                          String?                              @db.VarChar(100)
  cancelled_at                          DateTime?                            @db.DateTime(0)
  cancellation_reason                   String?                              @db.Text
  business_source_id                    Int?
  payment_mode_id                       Int?
  status                                master_reservations_status           @default(Confirmed)
  payment_status                        master_reservations_payment_status   @default(Pending)
  is_rate_includes_taxes                Int                                  @default(0) @db.TinyInt
  is_day_use                            Int                                  @default(0) @db.TinyInt
  rate_type                             master_reservations_rate_type        @default(Rate_Per_Night)
  folios_rooms_mapping                  folios_rooms_mapping[]
  master_credit_cards                   master_credit_cards[]
  master_folios                         master_folios[]
  master_reservation_billing_details    master_reservation_billing_details[]
  master_reservation_guests             master_reservation_guests[]
  master_business_sources               master_business_sources?             @relation(fields: [business_source_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_1f08e28abee845219ef984df847")
  master_payment_modes                  master_payment_modes?                @relation(fields: [payment_mode_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_2c6b39121f25718b96d872563bb")
  master_sbu                            master_sbu                           @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_77dcfdecd51e3b63a6d2f13acaf")
  master_business_agents                master_business_agents?              @relation(fields: [business_agent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_f0e753647de1734dd419522f2ba")
  reservation_rooms                     reservation_rooms[]
  reservation_source_info               reservation_source_info[]

  @@index([business_source_id], map: "FK_1f08e28abee845219ef984df847")
  @@index([payment_mode_id], map: "FK_2c6b39121f25718b96d872563bb")
  @@index([sbu_id], map: "FK_77dcfdecd51e3b63a6d2f13acaf")
  @@index([business_agent_id], map: "FK_f0e753647de1734dd419522f2ba")
}

model master_role_permissions {
  id                    Int                            @id @default(autoincrement())
  created_at            DateTime                       @default(now()) @db.Timestamp(6)
  created_by            Int?
  updated_at            DateTime                       @default(now()) @db.Timestamp(6)
  updated_by            Int?
  deleted_at            DateTime?                      @db.Timestamp(6)
  deleted_by            Int?
  role_id               Int
  permission_module_id  Int?
  permission_actions_id String?                        @db.LongText
  status                master_role_permissions_status @default(Active)
  master_roles          master_roles                   @relation(fields: [role_id], references: [id], onUpdate: Restrict, map: "FK_30840793dcbefdce640dbf3bbdd")

  @@index([role_id], map: "FK_30840793dcbefdce640dbf3bbdd")
}

model master_roles {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(100)
  sbu_id                  Int
  status                  master_roles_status       @default(Active)
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  created_by              Int?
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  updated_by              Int?
  deleted_at              DateTime?                 @db.Timestamp(6)
  deleted_by              Int?
  master_role_permissions master_role_permissions[]
  master_sbu              master_sbu                @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_85f924bae0ee929b41a6b037bc1")
  master_users            MasterUser[]

  @@unique([sbu_id, name], map: "composition_idx_name")
}

model master_room_rates {
  id                Int                      @id @default(autoincrement())
  sbu_id            Int
  room_type_id      Int
  rate_type_id      Int
  season_id         Int?
  price             Decimal?                 @db.Decimal(10, 2)
  installment_count Int?
  extra_adult_price Decimal?                 @db.Decimal(10, 2)
  extra_child_price Decimal?                 @db.Decimal(10, 2)
  status            master_room_rates_status @default(Active)
  created_at        DateTime                 @default(now()) @db.Timestamp(6)
  created_by        Int?
  updated_at        DateTime                 @default(now()) @db.Timestamp(6)
  updated_by        Int?
  deleted_at        DateTime?                @db.Timestamp(6)
  deleted_by        Int?
  master_seasons    master_seasons?          @relation(fields: [season_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_2434e20cbda8f872df114a4f483")
  master_rate_types master_rate_types        @relation(fields: [rate_type_id], references: [id], onUpdate: Restrict, map: "FK_8d8986053c1f0448229e833865b")
  master_room_types master_room_types        @relation(fields: [room_type_id], references: [id], onUpdate: Restrict, map: "FK_b7b4d9776b022c7e786cd863ad2")
  master_sbu        master_sbu               @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_cdcabd8a02bb6ce9714eb8c9fe0")

  @@index([season_id], map: "FK_2434e20cbda8f872df114a4f483")
  @@index([rate_type_id], map: "FK_8d8986053c1f0448229e833865b")
  @@index([room_type_id], map: "FK_b7b4d9776b022c7e786cd863ad2")
  @@index([sbu_id], map: "FK_cdcabd8a02bb6ce9714eb8c9fe0")
}

model master_room_type_rates {
  id                Int                           @id @default(autoincrement())
  rate_type_id      Int
  room_type_id      Int
  rack_rate         Decimal                       @default(0.00) @db.Decimal(10, 2)
  extra_child_rate  Decimal                       @default(0.00) @db.Decimal(10, 2)
  extra_adult_rate  Decimal                       @default(0.00) @db.Decimal(10, 2)
  status            master_room_type_rates_status @default(Active)
  created_at        DateTime                      @default(now()) @db.Timestamp(6)
  created_by        Int?
  updated_at        DateTime                      @default(now()) @db.Timestamp(6)
  updated_by        Int?
  deleted_at        DateTime?                     @db.Timestamp(6)
  deleted_by        Int?
  master_room_types master_room_types             @relation(fields: [room_type_id], references: [id], onUpdate: Restrict, map: "FK_1bb8a02543881dcbefb531b8543")
  master_rate_types master_rate_types             @relation(fields: [rate_type_id], references: [id], onUpdate: Restrict, map: "FK_ff7e986908b18d4ee3d61469f7e")

  @@index([room_type_id], map: "FK_1bb8a02543881dcbefb531b8543")
  @@index([rate_type_id], map: "FK_ff7e986908b18d4ee3d61469f7e")
}

model master_room_types {
  id                              Int                               @id @default(autoincrement())
  created_at                      DateTime                          @default(now()) @db.Timestamp(6)
  created_by                      Int?
  updated_at                      DateTime                          @default(now()) @db.Timestamp(6)
  updated_by                      Int?
  deleted_at                      DateTime?                         @db.Timestamp(6)
  deleted_by                      Int?
  name                            String                            @unique(map: "IDX_772530e1cf7f974f997dacb44d") @db.VarChar(255)
  sbu_id                          Int                               @default(0)
  short_name                      String?                           @db.VarChar(50)
  description                     String?                           @db.Text
  base_occupancy_adult            Int                               @default(0)
  base_occupancy_child            Int                               @default(0)
  max_occupancy_adult             Int                               @default(0)
  max_occupancy_child             Int                               @default(0)
  base_price                      Decimal                           @db.Decimal(10, 2)
  higher_price                    Decimal?                          @db.Decimal(10, 2)
  base_price_usd                  Decimal                           @db.Decimal(10, 2)
  higher_price_usd                Decimal?                          @db.Decimal(10, 2)
  extra_bed_allowed               Int                               @default(0) @db.TinyInt
  extra_bed_price                 Decimal?                          @db.Decimal(10, 2)
  status                          master_room_types_status          @default(Active)
  master_room_rates               master_room_rates[]
  master_room_type_rates          master_room_type_rates[]
  master_sbu                      master_sbu                        @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_10a56f5c1e9540ee4f0cfe8a966")
  master_rooms                    master_rooms[]
  master_season_room_type_mapping master_season_room_type_mapping[]
  reservation_rooms               reservation_rooms[]

  @@index([sbu_id], map: "FK_10a56f5c1e9540ee4f0cfe8a966")
}

model master_rooms {
  id                              Int                               @id @default(autoincrement())
  sbu_id                          Int
  room_number                     String                            @db.VarChar(50)
  room_code                       String?                           @db.VarChar(50)
  room_type_id                    Int?
  floor_id                        Int?
  building_id                     Int?
  description                     String?                           @db.Text
  status                          master_rooms_status               @default(available)
  general_status                  master_rooms_general_status       @default(Active)
  room_rate                       Decimal?                          @db.Decimal(10, 2)
  created_at                      DateTime                          @default(now()) @db.Timestamp(6)
  created_by                      Int?
  updated_at                      DateTime                          @default(now()) @db.Timestamp(6)
  updated_by                      Int?
  deleted_at                      DateTime?                         @db.Timestamp(6)
  deleted_by                      Int?
  folios_rooms_mapping            folios_rooms_mapping[]
  master_joint_room_mapping_rooms master_joint_room_mapping_rooms[]
  master_room_types               master_room_types?                @relation(fields: [room_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_1929723dece76261b97d6585f5e")
  master_floors                   master_floors?                    @relation(fields: [floor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_2ee47cdeb2fec41717b2ee60a8e")
  master_sbu                      master_sbu                        @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_762d41a2347c94d1f3a5988418c")
  master_buildings                master_buildings?                 @relation(fields: [building_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_a0eab794aa371c1f88a2033ff01")
  reservation_rooms               reservation_rooms[]

  @@index([room_type_id], map: "FK_1929723dece76261b97d6585f5e")
  @@index([floor_id], map: "FK_2ee47cdeb2fec41717b2ee60a8e")
  @@index([sbu_id], map: "FK_762d41a2347c94d1f3a5988418c")
  @@index([building_id], map: "FK_a0eab794aa371c1f88a2033ff01")
}

model master_sbu {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @db.VarChar(255)
  email                         String                          @db.VarChar(255)
  phone                         String?                         @db.VarChar(50)
  website                       String?                         @db.VarChar(255)
  grade                         String?                         @db.VarChar(50)
  bin_number                    String?                         @db.VarChar(50)
  currency_code                 String                          @default("USD") @db.VarChar(10)
  timezone                      String                          @default("Asia/Dhaka") @db.VarChar(100)
  status                        master_sbu_status               @default(Active)
  created_at                    DateTime                        @default(now()) @db.Timestamp(6)
  created_by                    Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamp(6)
  updated_by                    Int?
  deleted_at                    DateTime?                       @db.Timestamp(6)
  deleted_by                    Int?
  address1                      String?                         @db.Text
  hotline                       String?                         @db.VarChar(50)
  fax                           String?                         @db.VarChar(50)
  hotel_policy                  String?                         @db.Text
  logo_name                     String?                         @db.VarChar(512)
  logo_dimension                String?                         @db.VarChar(50)
  vat_software                  String?                         @db.VarChar(255)
  tax_rule                      String?                         @db.VarChar(255)
  rooms_count                   Int                             @default(0)
  assign_ip                     String?                         @db.VarChar(50)
  pos_outlets                   String?                         @db.Text
  country                       String?                         @db.VarChar(100)
  city                          String?                         @db.VarChar(100)
  master_buildings              master_buildings[]
  master_business_agents        master_business_agents[]
  master_business_sources       master_business_sources[]
  master_charges                master_charges[]
  master_currencies             master_currencies[]
  master_departments            master_departments[]
  master_discounts              master_discounts[]
  master_display_settings       master_display_settings?
  master_email_templates        master_email_templates[]
  master_floors                 master_floors[]
  master_folios                 master_folios[]
  master_guests                 master_guests[]
  master_hotel_settings         master_hotel_settings?
  master_measurement_units      master_measurement_units[]
  master_payments               master_payments[]
  master_pos_points             master_pos_points[]
  master_rate_types             master_rate_types[]
  master_reports                master_reports[]
  master_reservations           master_reservations[]
  master_roles                  master_roles[]
  master_room_rates             master_room_rates[]
  master_room_types             master_room_types[]
  master_rooms                  master_rooms[]
  master_seasons                master_seasons[]
  master_taxes                  master_taxes[]
  master_transportation_modes   master_transportation_modes[]
  master_user_accessible_hotels master_user_accessible_hotels[]
  master_user_activity_logs     master_user_activity_logs[]

  @@unique([name, email, status], map: "composite_idx_name")
}

model master_season_room_type_mapping {
  id                Int               @default(autoincrement())
  created_at        DateTime          @default(now()) @db.Timestamp(6)
  created_by        Int?
  updated_at        DateTime          @default(now()) @db.Timestamp(6)
  updated_by        Int?
  deleted_at        DateTime?         @db.Timestamp(6)
  deleted_by        Int?
  season_id         Int
  room_type_id      Int
  master_seasons    master_seasons    @relation(fields: [season_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "FK_20a78a07c24adf6250e7ccb59ca")
  master_room_types master_room_types @relation(fields: [room_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "FK_e3b23d1f1c5a10a90352aee381e")

  @@id([id, season_id, room_type_id])
  @@index([season_id], map: "FK_20a78a07c24adf6250e7ccb59ca")
  @@index([room_type_id], map: "FK_e3b23d1f1c5a10a90352aee381e")
}

model master_seasons {
  id                              Int                               @id @default(autoincrement())
  created_at                      DateTime                          @default(now()) @db.Timestamp(6)
  created_by                      Int?
  updated_at                      DateTime                          @default(now()) @db.Timestamp(6)
  updated_by                      Int?
  deleted_at                      DateTime?                         @db.Timestamp(6)
  deleted_by                      Int?
  sbu_id                          Int
  short_code                      String                            @db.VarChar(50)
  season_name                     String                            @db.VarChar(255)
  from_day                        Int
  to_day                          Int
  from_month                      Int
  to_month                        Int
  expiration_date                 DateTime                          @db.Date
  status                          master_seasons_status             @default(Active)
  master_room_rates               master_room_rates[]
  master_season_room_type_mapping master_season_room_type_mapping[]
  master_sbu                      master_sbu                        @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_d553eed6cf3d5f03e46c9bd592b")

  @@unique([sbu_id, short_code], map: "composition_idx_short_code")
}

model master_taxes {
  id                 Int                    @id @default(autoincrement())
  created_at         DateTime               @default(now()) @db.Timestamp(6)
  created_by         Int?
  updated_at         DateTime               @default(now()) @db.Timestamp(6)
  updated_by         Int?
  deleted_at         DateTime?              @db.Timestamp(6)
  deleted_by         Int?
  sbu_id             Int
  short_name         String                 @unique(map: "IDX_70bfd9915a0341a04f6727ff0e") @db.VarChar(20)
  name               String                 @db.VarChar(100)
  applies_from       DateTime               @db.Date
  exempt_after_days  Int?
  apply_tax          master_taxes_apply_tax
  apply_on_rack_rate Int                    @default(0) @db.TinyInt
  note               String?                @db.Text
  apply_after_amount Decimal?               @db.Decimal(10, 2)
  status             master_taxes_status    @default(Active)
  tax_rate           Decimal                @db.Decimal(10, 2)
  tax_type           master_taxes_tax_type  @default(percentage)
  master_sbu         master_sbu             @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_15422e859d8a1888d3771a252ac")

  @@index([sbu_id], map: "FK_15422e859d8a1888d3771a252ac")
}

model master_transportation_modes {
  id          Int                                @id @default(autoincrement())
  sbu_id      Int
  name        String                             @db.VarChar(255)
  color_code  String?                            @db.VarChar(10)
  description String?                            @db.Text
  status      master_transportation_modes_status @default(Active)
  created_at  DateTime                           @default(now()) @db.Timestamp(6)
  created_by  Int?
  updated_at  DateTime                           @default(now()) @db.Timestamp(6)
  updated_by  Int?
  deleted_at  DateTime?                          @db.Timestamp(6)
  deleted_by  Int?
  master_sbu  master_sbu                         @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_f01f07604f287c05d924509f5eb")

  @@index([sbu_id], map: "FK_f01f07604f287c05d924509f5eb")
}

model master_user_accessible_hotels {
  user_id      Int
  sbu_id       Int
  status       master_user_accessible_hotels_status @default(Active)
  created_at   DateTime                             @default(now()) @db.Timestamp(6)
  created_by   Int?
  updated_at   DateTime                             @default(now()) @db.Timestamp(6)
  updated_by   Int?
  deleted_at   DateTime?                            @db.Timestamp(6)
  deleted_by   Int?
  master_users MasterUser                           @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "FK_a00ea73583a48124606b0316684")
  master_sbu   master_sbu                           @relation(fields: [sbu_id], references: [id], onUpdate: Restrict, map: "FK_f4844bdbbdcebed689cb7b94da1")

  @@id([user_id, sbu_id])
  @@index([sbu_id], map: "FK_f4844bdbbdcebed689cb7b94da1")
}

model master_user_accessible_sbu {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  updated_by Int?
  deleted_at DateTime? @db.Timestamp(6)
  deleted_by Int?
  user_id    Int
  sbu_id     Int
}

model master_user_activity_logs {
  id            Int                              @id @default(autoincrement())
  sbu_id        Int?
  user_id       Int?
  activity_type String?                          @db.VarChar(100)
  module        String?                          @db.VarChar(100)
  description   String?                          @db.Text
  ip_address    String?                          @db.VarChar(45)
  timestamp     DateTime                         @default(now()) @db.Timestamp(0)
  status        master_user_activity_logs_status @default(Active)
  created_at    DateTime                         @default(now()) @db.Timestamp(6)
  created_by    Int?
  updated_at    DateTime                         @default(now()) @db.Timestamp(6)
  updated_by    Int?
  deleted_at    DateTime?                        @db.Timestamp(6)
  deleted_by    Int?
  master_sbu    master_sbu?                      @relation(fields: [sbu_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_4c18350bc046982248b5bbefd96")
  master_users  MasterUser?                      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_d14daf838a1921c81a540fdd765")

  @@index([sbu_id], map: "FK_4c18350bc046982248b5bbefd96")
  @@index([user_id], map: "FK_d14daf838a1921c81a540fdd765")
}

model migrations {
  id        Int    @id @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar(255)
}

model pos_menus {
  id          Int       @id @default(autoincrement())
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  created_by  Int?
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_by  Int?
  deleted_at  DateTime? @db.Timestamp(6)
  deleted_by  Int?
  outlet_id   Int
  unit_id     Int
  item_name   String    @db.VarChar(255)
  price       Decimal   @db.Decimal(10, 2)
  description String?   @db.Text
}

model pos_outlets {
  id          Int          @id @default(autoincrement())
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  created_by  Int?
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_by  Int?
  deleted_at  DateTime?    @db.Timestamp(6)
  deleted_by  Int?
  name        String       @db.VarChar(255)
  location    String?      @db.VarChar(255)
  description String?      @db.Text
  pos_tables  pos_tables[]
}

model pos_tables {
  id               Int               @id @default(autoincrement())
  created_at       DateTime          @default(now()) @db.Timestamp(6)
  created_by       Int?
  updated_at       DateTime          @default(now()) @db.Timestamp(6)
  updated_by       Int?
  deleted_at       DateTime?         @db.Timestamp(6)
  deleted_by       Int?
  outlet_id        Int
  table_name       String            @db.VarChar(100)
  table_short_code String            @db.VarChar(50)
  capacity         Int
  status           pos_tables_status @default(Available)
  remarks          String?           @db.Text
  pos_outlets      pos_outlets       @relation(fields: [outlet_id], references: [id], onUpdate: Restrict, map: "FK_b8d66587e026869edfdcb60f546")

  @@index([outlet_id], map: "FK_b8d66587e026869edfdcb60f546")
}

model reservation_rooms {
  id                  Int                 @id @default(autoincrement())
  created_at          DateTime            @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime            @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?           @db.Timestamp(6)
  deleted_by          Int?
  reservation_id      Int
  room_id             Int
  room_type_id        Int
  rate_type_id        Int
  adults_in_room      Int                 @default(0)
  children_in_room    Int                 @default(0)
  room_rate           Decimal             @default(0.00) @db.Decimal(10, 2)
  discount_applied    Decimal?            @db.Decimal(10, 2)
  is_assigned         Int                 @default(0) @db.TinyInt
  folio_id            Int?
  master_reservations master_reservations @relation(fields: [reservation_id], references: [id], onUpdate: Restrict, map: "FK_54d066b7788c94b9487aec4c0c8")
  master_room_types   master_room_types   @relation(fields: [room_type_id], references: [id], onUpdate: Restrict, map: "FK_67b7c9ab5b2f2192916312dd1a5")
  master_rooms        master_rooms        @relation(fields: [room_id], references: [id], onUpdate: Restrict, map: "FK_cdbbce175bcb1a04fc4e972c5ba")
  master_rate_types   master_rate_types   @relation(fields: [rate_type_id], references: [id], onUpdate: Restrict, map: "FK_f5ec3b8316cc82c7018e8d8f5f0")

  @@index([reservation_id], map: "FK_54d066b7788c94b9487aec4c0c8")
  @@index([room_type_id], map: "FK_67b7c9ab5b2f2192916312dd1a5")
  @@index([room_id], map: "FK_cdbbce175bcb1a04fc4e972c5ba")
  @@index([rate_type_id], map: "FK_f5ec3b8316cc82c7018e8d8f5f0")
}

model reservation_source_info {
  id                  Int                            @id @default(autoincrement())
  created_at          DateTime                       @default(now()) @db.Timestamp(6)
  created_by          Int?
  updated_at          DateTime                       @default(now()) @db.Timestamp(6)
  updated_by          Int?
  deleted_at          DateTime?                      @db.Timestamp(6)
  deleted_by          Int?
  reservation_id      Int?
  market_code_id      Int?
  business_source_id  Int?
  travel_agent_id     Int?
  voucher_no          String?                        @db.VarChar(255)
  commission_plan     String?                        @db.VarChar(255)
  plan_value          Decimal?                       @db.Decimal(10, 2)
  company_id          Int?
  sales_person_id     Int?
  status              reservation_source_info_status @default(Active)
  master_reservations master_reservations?           @relation(fields: [reservation_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_2ba9a5c409635239b6f5ab59f3f")
  master_companies    master_companies?              @relation(fields: [company_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_63f5c3b8480be2d4fa12d1efa84")

  @@unique([reservation_id, status], map: "composite_idx_reservation_id_status")
  @@index([company_id], map: "FK_63f5c3b8480be2d4fa12d1efa84")
}

model template_placeholder_mappings {
  id                     Int                    @id @default(autoincrement())
  created_at             DateTime               @default(now()) @db.Timestamp(6)
  created_by             Int?
  updated_at             DateTime               @default(now()) @db.Timestamp(6)
  updated_by             Int?
  deleted_at             DateTime?              @db.Timestamp(6)
  deleted_by             Int?
  template_id            Int
  placeholder_id         Int
  master_email_templates master_email_templates @relation(fields: [template_id], references: [id], onUpdate: Restrict, map: "FK_0a8a400646caeb5f21db88cc797")
  template_placeholders  template_placeholders  @relation(fields: [placeholder_id], references: [id], onUpdate: Restrict, map: "FK_fabb560c83e91a3aabcd520c1a1")

  @@index([template_id], map: "FK_0a8a400646caeb5f21db88cc797")
  @@index([placeholder_id], map: "FK_fabb560c83e91a3aabcd520c1a1")
}

model template_placeholders {
  id                            Int                             @id @default(autoincrement())
  created_at                    DateTime                        @default(now()) @db.Timestamp(6)
  created_by                    Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamp(6)
  updated_by                    Int?
  deleted_at                    DateTime?                       @db.Timestamp(6)
  deleted_by                    Int?
  name                          String                          @unique(map: "IDX_2534d80327953769e928b51a55") @db.VarChar(255)
  description                   String?                         @db.VarChar(255)
  source_module                 String                          @db.VarChar(50)
  source_table                  String                          @db.VarChar(255)
  source_column                 String                          @db.VarChar(255)
  filter_key                    String                          @db.VarChar(255)
  template_placeholder_mappings template_placeholder_mappings[]
}

model token_log {
  id                  Int      @id @default(autoincrement())
  user_id             Int
  user_type           Int
  refreshtoken        String   @db.VarChar(255)
  refreshtokenexpires String   @db.VarChar(255)
  created_at          DateTime @default(now()) @db.Timestamp(6)
  ip_address          String   @db.VarChar(255)
}

model user_permissions {
  id                        Int                       @id @default(autoincrement())
  created_at                DateTime                  @default(now()) @db.Timestamp(6)
  created_by                Int?
  updated_at                DateTime                  @default(now()) @db.Timestamp(6)
  updated_by                Int?
  deleted_at                DateTime?                 @db.Timestamp(6)
  deleted_by                Int?
  user_id                   Int
  permission_module_id      Int
  permission_actions_id     String?                   @db.LongText
  master_users              MasterUser                @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "FK_3495bd31f1862d02931e8e8d2e8")
  master_permission_modules master_permission_modules @relation(fields: [permission_module_id], references: [id], onUpdate: Restrict, map: "FK_a825263026c77e9bd1d5a9a2760")

  @@index([user_id], map: "FK_3495bd31f1862d02931e8e8d2e8")
  @@index([permission_module_id], map: "FK_a825263026c77e9bd1d5a9a2760")
}

enum master_currencies_status {
  Active
  Inactive
}

enum master_payment_modes_status {
  Active
  Inactive
}

enum master_user_accessible_hotels_status {
  Active
  Inactive
}

enum master_roles_status {
  Active
  Inactive
}

enum master_business_sources_status {
  Active
  Inactive
}

enum master_discounts_type {
  percentage
  fixed
}

enum master_departments_status {
  Active
  Inactive
}

enum master_measurement_units_status {
  Active
  Inactive
}

enum master_transportation_modes_status {
  Active
  Inactive
}

enum master_floors_status {
  Active
  Inactive
}

enum master_room_type_rates_status {
  Active
  Inactive
}

enum master_email_templates_status {
  Active
  Inactive
}

enum master_hotel_settings_status {
  Active
  Inactive
}

enum housekeeping_work_order_log_status {
  new
  assigned
  in_progress
  completed
}

enum master_permission_actions_status {
  Active
  Inactive
}

enum master_pos_points_status {
  Active
  Inactive
}

enum master_reservation_billing_details_billing_type {
  Cash_Bank   @map("Cash/Bank")
  City_Ledger @map("City Ledger")
}

enum master_rooms_status {
  available
  occupied
  maintenance
  out_of_service
  dirty
}

enum master_user_activity_logs_status {
  Active
  Inactive
}

enum housekeeping_work_order_category {
  clean
  maintenance
  repair
  other
}

enum master_display_settings_status {
  Active
  Inactive
}

enum master_joint_rooms_status {
  Active
  Inactive
}

enum master_payment_modes_type {
  cash
  card
  online
  other
}

enum master_rooms_general_status {
  Active
  Inactive
}

enum master_room_rates_status {
  Active
  Inactive
}

enum master_sbu_status {
  Active
  Inactive
}

enum housekeeping_work_order_priority {
  high
  medium
  low
}

enum master_buildings_status {
  Active
  Inactive
}

enum master_discounts_status {
  Active
  Inactive
}

enum master_extra_charges_rate {
  Flat_Percentage @map("Flat Percentage")
  Flat_Amount     @map("Flat Amount")
}

enum master_folios_folio_type {
  Guest
  Company
  Group_Owner @map("Group Owner")
}

enum master_role_permissions_status {
  Active
  Inactive
}

enum housekeeping_work_order_status {
  new
  assigned
  in_progress
  completed
}

enum master_charges_type {
  RoomCharges
  AirportPickup
  BreakfastWithLunchOrDinner
  Damage
  BalanceTransfer
}

enum master_rate_types_status {
  Active
  Inactive
}

enum master_reservation_billing_details_reservation_type {
  Confirm_Booking             @map("Confirm Booking")
  Hold_Confirm_Booking        @map("Hold Confirm Booking")
  Hold_Unconfirm_Booking      @map("Hold Unconfirm Booking")
  Online_Failed_Booking       @map("Online Failed Booking")
  Released
  Unconfirmed_Booking_Inquiry @map("Unconfirmed Booking Inquiry")
}

enum pos_tables_status {
  Available
  Occupied
  Hold
}

enum master_charges_posting_type {
  CheckInAndCheckOut
  EveryDay
  EveryDayExceptCheckIn
  EveryDayExceptCheckInAndCheckOut
  EveryDayExceptCheckOut
  CustomDate
  CheckOut
}

enum master_folios_status {
  Open
  Closed
  Cut
}

enum master_guests_id_type {
  nid
  passport
  driving_license
  birth_certificate
  other
}

enum master_permission_modules_status {
  active
  inactive
}

enum master_taxes_apply_tax {
  During_checkout @map("During checkout")
  Other
}

enum master_charges_charge_rule {
  PerAdult
  PerBooking
  PerChild
  PerPerson
  PerQuanity
}

enum master_credit_cards_card_type {
  physical_card
  virtual_card
}

enum master_business_agents_status {
  Active
  Inactive
}

enum master_email_templates_template_used_for {
  booking
  invoice
  marketing
  other
}

enum master_extra_charges_apply_on_offered_room_rent {
  Net_Rate  @map("Net Rate")
  Sell_Rate @map("Sell Rate")
}

enum master_charges_sub_type {
  Late_Checkout_Charges @map("Late Checkout Charges")
  Cancellation_Revenue  @map("Cancellation Revenue")
  Day_Use_Charges       @map("Day Use Charges")
  No_Show_Revenue       @map("No Show Revenue")
  Room_Charges          @map("Room Charges")
}

enum master_payments_payment_status {
  pending
  paid
  failed
  refunded
  partially_refunded
  chargeback
  expired
  cancelled
}

enum master_seasons_status {
  Active
  Inactive
}

enum master_display_settings_arr_dept_date_format {
  DD_MM_YYYY  @map("DD-MM-YYYY")
  MM_DD_YYYY  @map("MM-DD-YYYY")
  YYYY_MM_DD  @map("YYYY-MM-DD")
  DD_MMM_YYYY @map("DD-MMM-YYYY")
}

enum master_taxes_status {
  Active
  Inactive
}

enum reservation_source_info_status {
  Active
  Inactive
}

enum master_display_settings_round_off_type {
  minusOne @map("-1")
  notZero  @map("<>0")
  one      @map("1")
}

enum master_taxes_tax_type {
  percentage
  fixed
}

enum master_extra_charges_voucher_no_type {
  Auto___Private @map("Auto - Private")
  Auto___General @map("Auto - General")
  Manual
}

enum master_display_settings_salutation {
  Mr_  @map("Mr.")
  Ms_  @map("Ms.")
  Mrs_ @map("Mrs.")
  Dr_  @map("Dr.")
}

enum master_display_settings_identity_type {
  NID
  Passport
  Driving_License   @map("Driving License")
  Birth_Certificate @map("Birth Certificate")
  Other
}

enum master_room_types_status {
  Active
  Inactive
}

enum master_display_settings_default_reservation_type {
  Confirm_Booking @map("Confirm Booking")
  Tentative
}

enum master_display_settings_bill_to {
  Guest
  Company
  Agent
}

enum master_extra_charges_web_posting_rule {
  CheckIn_and_CheckOut    @map("CheckIn and CheckOut")
  Everyday
  Everyday_except_CheckIn @map("Everyday except CheckIn")
  Only_CheckIn            @map("Only CheckIn")
  Only_CheckOut           @map("Only CheckOut")
}

enum master_users_calendar_language {
  English_UK @map("English/UK")
}

enum master_reservation_billing_details_commission_plan {
  Confirm_Booking @map("Confirm Booking")
  Non_Refundable  @map("Non Refundable")
  Corporate
}

enum master_users_language {
  Default
}

enum master_display_settings_web_rate_mode {
  Regular
  Allocated
}

enum master_display_settings_web_room_inventory_mode {
  Regular
  Allocated
}

enum master_extra_charges_status {
  Active
  Inactive
}

enum master_companies_status {
  Active
  Inactive
}

enum master_display_settings_group_payment_posting_mode {
  Group_Owner       @map("Group Owner")
  Room_Distribution @map("Room Distribution")
}

enum master_guests_vip_status {
  Bronze
  Gold
  Platinum
  Silver
  Diamond
}

enum master_users_status {
  Active
  Inactive
}

enum master_display_settings_payment_mode {
  Cash_Bank   @map("Cash/Bank")
  City_Ledger @map("City Ledger")
}

enum master_display_settings_payment_gateway {
  Common_PG @map("Common PG")
  shift4
}

enum master_guests_guest_type {
  Adult
  Child
  Infant
  Other
}

enum master_display_settings_date_format {
  DD_MM_YYYY  @map("DD-MM-YYYY")
  MM_DD_YYYY  @map("MM-DD-YYYY")
  YYYY_MM_DD  @map("YYYY-MM-DD")
  DD_MMM_YYYY @map("DD-MMM-YYYY")
}

enum master_reservations_status {
  Confirmed
  Tentative
  Cancelled
  CheckedIn
  CheckedOut
  Pending
}

enum master_display_settings_time_format {
  HH_mm   @map("HH:mm")
  hh_mm_A @map("hh:mm A")
}

enum master_reservations_payment_status {
  Paid
  Pending
  Refunded
  Partially_Paid @map("Partially Paid")
}

enum master_guests_purpose_of_visit {
  Business___MICE             @map("Business & MICE")
  Event__Music                @map("Event (Music")
  Festival                    @map(" Festival")
  etc__                       @map(" etc.)")
  Government_Diplomatic       @map("Government/Diplomatic")
  Leisure_or_Special_Occasion @map("Leisure or Special Occasion")
  Other__Medical              @map("Other (Medical")
  Transit                     @map(" Transit")
}

enum master_reservations_rate_type {
  Rate_Per_Night      @map("Rate Per Night")
  Total_Rate_for_Stay @map("Total Rate for Stay")
}

enum master_guests_marital_status {
  Single
  Married
  Divorced
  Widowed
  Other
}

enum master_guests_gender {
  Male
  Female
  Other
}
